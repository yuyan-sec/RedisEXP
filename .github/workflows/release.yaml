name: goreleaser

on:
  push:
    tags:
      - '*'  # 触发推送所有 tag

permissions:
  contents: write  # 允许修改 GitHub 内容

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # 设置最大超时时间

    steps:
      - name: "Check out code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 检出所有提交

      - name: "Set up Go"
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.4'

      - name: "Install UPX"
        uses: crazy-max/ghaction-upx@v3
        with:
          install-only: true

      - name: "UPX version"
        run: upx --version  # 打印 UPX 版本，确认安装

      - name: "Run GoReleaser"
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: "release --clean -f .github/conf/.goreleaser.yml"  # 使用自定义的 goreleaser 配置文件
          workdir: .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Create all.zip"
        run: |
          cd dist  # 进入构建输出目录
          # 使用 find 命令获取所有二进制文件并重命名
          for file in $(find . -type f -name "RedisEXP*"); do
            # 获取平台和架构信息
            os=$(echo $file | sed -E 's/.*_(darwin|linux|freebsd|solaris|windows)_.*/\1/')
            arch=$(echo $file | sed -E 's/.*_(amd64|386|arm64|arm|mips|mipsle|mips64)_.*/\1/')
            # 构建新的文件名
            new_name="RedisEXP_${os}_${arch}$(echo $file | sed 's/.*\./\./')"
            mv "$file" "$new_name"  # 重命名文件
          done
          # 最后将所有文件平铺打包成 all.zip
          zip -r RedisExp_All.zip ./*  # 打包文件

      - name: "Upload RedisExp_All.zip to GitHub Release"
        uses: softprops/action-gh-release@v1
        with:
          files: dist/RedisExp_All.zip  # 上传打包好的 ZIP 文件
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
